
DROPDOWN MENU:
 {/*  <div  className="group relative w-8 h-4  float-right right-20 top-2 lg:top-2 xl:top-4">
          
          <motion.img  className="w-8 h-8 rounded-full cursor-pointer " src='src\assets\downarrow.png' alt="userpic"
          onClick={() => { setIsComponentVisible(!isComponentVisible); setIsActive(!isActive);}}
        animate={{ rotate: isActive && isComponentVisible ? 180 : 0}} />
            

          <div  ref={reft} className={`block flex flex-col justify-center items-center mt-2 w-40 -ml-16
           rounded-md   bg-[rgba(255,255,255,0)]  z-0`}>

          {isComponentVisible && isActive && (<div>
          <Link   to="/profile"  className="block p-2 xl:p-2 
          border-white font-hlight  transition w-32 mt-2 duration-500 hover:bg-white
         border-slate-700  border-dashed rounded-md text-md text-white w-full text-center sm:text-xl lg:text-xl xl:text-md
         bg-slate-700 shadow-[0px_3px_1px_2px_rgba(0,0,0,0.4)] hover:text-white">Profile</Link>

         <Link to="/my-gallery"  className="block p-2 xl:p-2 
          border-white font-hlight transition w-32 duration-500 hover:bg-white
         border-slate-700  border-dashed rounded-md text-md text-white w-full text-center sm:text-xl lg:text-xl xl:text-md
         bg-slate-700 shadow-[0px_3px_1px_2px_rgba(0,0,0,0.4)] hover:text-slate-800  my-2">My gallery</Link>

          <Link to="/login" onClick={handleLogout} className="block p-2 xl:p-2
          border-white font-hlight  transition  duration-500 hover:bg-white
         border-slate-700 mb-3 border-dashed rounded-md text-md text-white w-full text-center sm:text-xl lg:text-xl xl:text-md
         bg-slate-700 shadow-[0px_3px_1px_2px_rgba(0,0,0,0.4)] hover:text-white">Log out</Link></div>)}

          

          </div>
          </div> */}

RANDOM HEADER STUFF:
    //const ref = ref(storage, 'images/husky.jpg')

    //const storage = getStorage();
    
    /*async function showProfile(){
      if(useAuth().currentUser){
      setError('')

    try {
     await getDownloadURL(ref(projectStorage, `${currentUser.uid}/profilepics/image`))
     
      // Or inserted into an <img> element
      const img = document.getElementById('myimg');
      img.setAttribute('src', url);
    
    }
    catch {
      setError('Failed to log out')
    }*/
    


    /* if( useAuth().currentUser){
   getDownloadURL(ref(projectStorage, `${currentUser.uid}/profilepics/image`))
  .then((url) => {
     // Or inserted into an <img> element
     const img = document.getElementById('myimg');
     img.setAttribute('src', url);
   })
   .catch((error) => {
    console.log("user has no profile pic")
   });
  }  */

  //onClick={() => setIsActive(!isActive)}
  //  onClick={() => setIsComponentVisible(!isComponentVisible)}
  // ${isActive ? "block" : "hidden"}
  //{!isComponentVisible && ()}

   {/*  <p
          className={`${pathname === '/profile' ? 'border-slate-700' : ''} border-white border-b-2  p-[11px] xl:p-4
              font-hbold tracking-wide mr-2   float-right transition duration-500 cursor-default
              text-lg text-slate-800 sm:text-xl lg:text-xl xl:text-xl`}
          >{ username}</p> */}

          /* {/* <Link to='/login'
          className={`${pathname === '/signup' || pathname === '/login' ? 'border-slate-700' : ''}
          border-b-2 border-sand mr-8
            p-3 px-6 font-headersc transition duration-500 hover:bg-cream
          hover:border-peach text-lg text-blue  sm:text-xl  lg:text-xl xl:text-2xl`}
          >Sign In</Link> */

//useAuth().currentUser && useAuth().currentUser.email ? currentUser.email : 'Sign In'
//{useAuth().currentUser && useAuth().currentUser.email ? "/profile" : "/login"}
//currentUser.email !== null

/*const handleClick = () => {
    // üëáÔ∏è toggle isActive state on click
    setIsActive(!isActive);
  };
 
  let toggleClass = isActive ? 'border-slate-700' : ''; */

  /*{isComponentVisible ? 
          (<motion.img  className="w-8 h-8 rounded-full cursor-pointer " src='src\assets\downarrow.png' alt="userpic"
          onClick={() => setIsActive(!isActive)}
        animate={{ rotate: isActive ? 180 : 0}} />)
          :  */

async function handleLogout() {
    setError('')

    try{
      await logout()
      navigate('/login')
    } catch {
      setError('Failed to log out')
    }}
